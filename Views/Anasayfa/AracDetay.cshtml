@model RentalCar.Models.Arac

@{
    ViewData["Title"] = $"{Model.Marka} {Model.Model} Detay";
}

<div class="container">
    <div class="row">
        <div class="col-md-6">
            @if (!string.IsNullOrEmpty(Model.ResimUrl))
            {
                <img src="@Model.ResimUrl" class="img-fluid rounded" alt="@Model.Marka @Model.Model">
            }
            else
            {
                <img src="/images/default-car.jpg" class="img-fluid rounded" alt="Varsayılan Araç Resmi">
            }
        </div>
        <div class="col-md-6">
            <h2>@Model.Marka @Model.Model (@Model.Yil)</h2>
            <div class="mb-4">
                <h4>Araç Özellikleri</h4>
                <ul class="list-unstyled">
                    <li><strong>Kapasite:</strong> @Model.Kapasite Kişilik</li>
                    <li><strong>Yakıt Türü:</strong> @Model.YakitTuru</li>
                    <li><strong>Vites Türü:</strong> @Model.VitesTuru</li>
                    <li><strong>Günlük Fiyat:</strong> @Model.GunlukFiyat.ToString("C")</li>
                    <li>
                        <strong>Durum:</strong>
                        <span class="badge bg-@(Model.Musait ? "success" : "danger")">
                            @(Model.Musait ? "Müsait" : "Kirada")
                        </span>
                    </li>
                </ul>
            </div>

            @if (Model.Musait)
            {
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">Kiralama Talebi</h4>
                        <form asp-action="KiralamaTalebiGonder" method="post">
                            <input type="hidden" name="aracId" value="@Model.Id" />
                            <div class="mb-3">
                                <label class="form-label">Ad Soyad</label>
                                <input type="text" class="form-control" name="musteriAdi" required>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">E-posta</label>
                                <input type="email" class="form-control" name="musteriEmail" required>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Telefon</label>
                                <input type="tel" class="form-control" name="musteriTelefon" required>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Başlangıç Tarihi</label>
                                <input type="date" class="form-control" name="baslangicTarihi" id="baslangicTarihi" required min="@DateTime.Now.ToString("yyyy-MM-dd")" onchange="hesaplaToplamFiyat()">
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Bitiş Tarihi</label>
                                <input type="date" class="form-control" name="bitisTarihi" id="bitisTarihi" required min="@DateTime.Now.ToString("yyyy-MM-dd")" onchange="hesaplaToplamFiyat()">
                            </div>
                            <div class="mb-3" id="toplamFiyatDiv">
                                <div class="alert alert-info">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <strong>Kiralama Süresi:</strong> <span id="kiralamaSuresi">-</span> gün<br>
                                            <strong>Günlük Fiyat:</strong> @Model.GunlukFiyat.ToString("C")
                                        </div>
                                        <div class="text-end">
                                            <h4 class="mb-0">Toplam: <span id="toplamFiyat">0,00 ₺</span></h4>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <button type="submit" class="btn btn-primary">Kiralama Talebi Gönder</button>
                        </form>
                    </div>
                </div>
            }
            else
            {
                <div class="alert alert-warning">
                    Bu araç şu anda kiralamaya uygun değil.
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Toplam fiyat hesaplama fonksiyonu
        function hesaplaToplamFiyat() {
            try {
                console.log("hesaplaToplamFiyat fonksiyonu çalıştı");
                
                var baslangicStr = document.getElementById('baslangicTarihi').value;
                var bitisStr = document.getElementById('bitisTarihi').value;
                var gunlukFiyat = @Json.Serialize(Model.GunlukFiyat);
                
                console.log("Başlangıç:", baslangicStr);
                console.log("Bitiş:", bitisStr);
                console.log("Günlük Fiyat:", gunlukFiyat);

                if (baslangicStr && bitisStr) {
                    var baslangic = new Date(baslangicStr);
                    var bitis = new Date(bitisStr);
                    
                    if (bitis >= baslangic) {
                        var gunFarki = Math.ceil((bitis - baslangic) / (1000 * 60 * 60 * 24)) + 1;
                        var toplamFiyat = gunFarki * gunlukFiyat;
                        
                        console.log("Gün Farkı:", gunFarki);
                        console.log("Toplam Fiyat:", toplamFiyat);

                        document.getElementById('kiralamaSuresi').textContent = gunFarki;
                        document.getElementById('toplamFiyat').textContent = new Intl.NumberFormat('tr-TR', {
                            style: 'currency',
                            currency: 'TRY'
                        }).format(toplamFiyat);
                        
                        document.getElementById('toplamFiyatDiv').style.display = 'block';
                    } else {
                        document.getElementById('toplamFiyatDiv').style.display = 'none';
                    }
                }
            } catch (error) {
                console.error("Hata oluştu:", error);
            }
        }

        // Sayfa yüklendiğinde ve tarih değiştiğinde hesaplama yap
        document.addEventListener('DOMContentLoaded', function() {
            console.log("Sayfa yüklendi");
            
            var baslangicInput = document.getElementById('baslangicTarihi');
            var bitisInput = document.getElementById('bitisTarihi');

            baslangicInput.addEventListener('change', function() {
                console.log("Başlangıç tarihi değişti");
                bitisInput.min = this.value;
                hesaplaToplamFiyat();
            });

            bitisInput.addEventListener('change', function() {
                console.log("Bitiş tarihi değişti");
                hesaplaToplamFiyat();
            });

            // İlk yüklemede kontrol et
            hesaplaToplamFiyat();
        });
    </script>
} 